/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/*
    To-do: Add support for .ssc files
    

*/
package stepmaniafileconverter;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.util.Scanner;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 * 
 * @author kamfi
 */
public class StepmaniaFileConverter extends javax.swing.JFrame {
    private final JFileChooser openFileChooser; 
    private static File stepFile;
    private static int choice = 0;
    public static DiffParser job;
    /**
     * Creates new form StepmaniaFileConverter
     */
    public StepmaniaFileConverter() {
        initComponents();
        
        openFileChooser = new JFileChooser();
        try{ // gets last known directory
            Scanner in = new Scanner(new File("lastLocation.np"));
            String dir = in.nextLine();
            in.close();
            if(in!=null)
             openFileChooser.setCurrentDirectory(new File(dir));
            else
                openFileChooser.setCurrentDirectory(new File("c:\\Games"));
        }catch(Exception e){}
       
        openFileChooser.setFileFilter(new FileNameExtensionFilter("SM Stepmania","sm"));
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        openFileButton = new javax.swing.JButton();
        messageLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        songInfo = new javax.swing.JTextArea();
        songTitle = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        currSongSelection = new javax.swing.JTextArea();
        toSoloButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        PreviousButton = new javax.swing.JButton();
        NextButton = new javax.swing.JButton();
        saveFileButton = new javax.swing.JButton();
        toIndexButton = new javax.swing.JButton();
        toKBSevenButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Stepmania File Converter");
        setMinimumSize(new java.awt.Dimension(995, 551));
        setResizable(false);

        openFileButton.setText("Open File...");
        openFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileButtonActionPerformed(evt);
            }
        });

        songInfo.setEditable(false);
        songInfo.setColumns(20);
        songInfo.setRows(5);
        jScrollPane1.setViewportView(songInfo);

        songTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        songTitle.setText("Title");

        imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageLabel.setIcon(new javax.swing.ImageIcon("D:\\Programs\\Java fun\\Stepmania\\Note Randomizer v2\\Final\\File Reader\\ImagePlaceHolder.png")); // NOI18N

        currSongSelection.setEditable(false);
        currSongSelection.setColumns(20);
        currSongSelection.setRows(5);
        jScrollPane2.setViewportView(currSongSelection);

        toSoloButton.setText("Solo-ify");
        toSoloButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toSoloButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        PreviousButton.setText("Prev");
        PreviousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviousButtonActionPerformed(evt);
            }
        });

        NextButton.setText("Next");
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        saveFileButton.setText("Save File...");
        saveFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileButtonActionPerformed(evt);
            }
        });

        toIndexButton.setText("Index-ify");
        toIndexButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toIndexButtonActionPerformed(evt);
            }
        });

        toKBSevenButton.setText("KB-7");
        toKBSevenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toKBSevenButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(PreviousButton)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(NextButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(openFileButton)
                                .addGap(6, 6, 6)
                                .addComponent(saveFileButton)
                                .addGap(18, 18, 18)
                                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(songTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 969, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(toSoloButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toIndexButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toKBSevenButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton)))
                .addGap(6, 6, 6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(openFileButton)
                    .addComponent(saveFileButton)
                    .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(songTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(NextButton)
                                .addGap(69, 69, 69))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(PreviousButton)
                                .addGap(67, 67, 67)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeButton)
                    .addComponent(toIndexButton)
                    .addComponent(toKBSevenButton)
                    .addComponent(toSoloButton))
                .addGap(60, 60, 60))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static String findActualPath(String path){
        boolean done = false;
        int i = path.length()-1;
        while(!done){
            path = path.substring(0,i);
            i--;
            if((path.charAt(i)=='/')||(path.charAt(i)=='\\')||i<0)
                done = true;
        }
        return path;
    }
    private void openFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileButtonActionPerformed
        int returnValue = openFileChooser.showOpenDialog(this);
        
        if(returnValue == JFileChooser.APPROVE_OPTION){
           stepFile = openFileChooser.getSelectedFile(); 
           songInfo.setText("");
           songTitle.setText("");
   
            if(job!=null){
                job = null;
                job = new DiffParser();
            }
            String[] a = new String[1];
            a[0] = stepFile.getAbsolutePath();
            job.main.chart.clear();
            job.mainConvert(a);
         
            updateInfo();
            messageLabel.setText("File successfully loaded!");
            String filePath = findActualPath(stepFile.getAbsolutePath())+job.main.banner;
            try{ // writes last known location
                FileWriter fw = new FileWriter(new File("lastLocation.np"));
                String temp = findActualPath(stepFile.getAbsolutePath());
                fw.write(temp);
                fw.close();
            }catch(Exception e){}
            
            System.out.println(filePath);
            
            // Resizes and adds Banner Start
            BufferedImage image = null;
            try{
                image = ImageIO.read(new File(filePath));
            }catch(Exception e){}
            
            Image dimg = image.getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(),
            Image.SCALE_SMOOTH);
            ImageIcon img = new ImageIcon(dimg);
            
            if(img!=null)
                imageLabel.setIcon(img);
            // Resizes and adds Banner End
            /*String backgroundPath = findActualPath(stepFile.getAbsolutePath())+job.main.banner;
            BufferedImage bg = null;
            try{
                bg = ImageIO.read(new File(backgroundPath));
            }catch(Exception e){}
            for(int i =0;i<bg.getWidth();i++)
                for(int j=0;j<bg.getHeight();j++)
                bg.setRGB(i, j, Color.red.getRGB());*/
            
          
        }else{
            messageLabel.setText("No file chosen!");
        }
        
    }//GEN-LAST:event_openFileButtonActionPerformed
    public void updateInfo(){
        String outputText ="";
            
        for(int i = 0;i<job.main.chart.size();i++){
            outputText += (i+1+":");
            outputText += job.main.chart.get(i).difficulty+ " ";
            outputText += job.main.chart.get(i).rating+" ";
            outputText += "("+job.main.chart.get(i).mode+")"+"\n";
            outputText += job.main.chart.get(i).length+" lines of notes..."+"\n";
            outputText += job.main.chart.get(i).totalNotes+" notes..."+"\n"+"\n";
            //System.out.println(job.main.chart.get(i).topText);
        } 
        songTitle.setText("Song: "+job.main.title);
        songInfo.setText(outputText);
        if(job.main.chart.size()!=0){
            outputText = "";
            outputText += (choice+1+":");
            outputText += job.main.chart.get(choice).difficulty+ " ";
            outputText += job.main.chart.get(choice).rating+" ";
            outputText += "("+job.main.chart.get(choice).mode+")"+"\n";
            outputText += job.main.chart.get(choice).length+" lines of notes..."+"\n";
            outputText += job.main.chart.get(choice).totalNotes+" notes..."+"\n"+"\n";
            currSongSelection.setText(outputText);
        }else{
            outputText = "";
            currSongSelection.setText(outputText);
        }
        messageLabel.setText("");
    }
    // handles int going outside of bounds
    private void wrapInt(int amt){
        choice += amt;
        if(choice>=job.main.chart.size())
            choice = 0;
        else if(choice<0)
            choice = job.main.chart.size() -1;
        updateInfo();
    }
    private void PreviousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreviousButtonActionPerformed
        // TODO add your handling code here:
        wrapInt(-1);
    }//GEN-LAST:event_PreviousButtonActionPerformed

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed
        // TODO add your handling code here:
        wrapInt(1);
    }//GEN-LAST:event_NextButtonActionPerformed

    private void saveFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileButtonActionPerformed
        // Outputs current tempfile and saves it to starting file
        if(job.main.chart.size()!=0&&job.main.chart!=null){
            job.saveFile();
            messageLabel.setText("File successfully saved!");
        }
    }//GEN-LAST:event_saveFileButtonActionPerformed

    private void toSoloButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toSoloButtonActionPerformed
        // Adds new solo chart from this chart
       if(job.main.chart.size()!=0){
        job.soloify(choice);  
        updateInfo();
       }
    }//GEN-LAST:event_toSoloButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // Removes the selected chart
        if(job.main.chart.size()!=0){
            job.main.chart.remove(choice);
            wrapInt(0);
            updateInfo();
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void toIndexButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toIndexButtonActionPerformed
        // TODO add your handling code here:
        if(job.main.chart.size()!=0){
            job.indexify(choice);  
            updateInfo();
        }
    }//GEN-LAST:event_toIndexButtonActionPerformed

    private void toKBSevenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toKBSevenButtonActionPerformed
        // TODO add your handling code here:
        if(job.main.chart.size()!=0){
        job.sevenify(choice);  
        updateInfo();
       }
    }//GEN-LAST:event_toKBSevenButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StepmaniaFileConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StepmaniaFileConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StepmaniaFileConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StepmaniaFileConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StepmaniaFileConverter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton NextButton;
    private javax.swing.JButton PreviousButton;
    private javax.swing.JTextArea currSongSelection;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JButton openFileButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveFileButton;
    private javax.swing.JTextArea songInfo;
    private javax.swing.JLabel songTitle;
    private javax.swing.JButton toIndexButton;
    private javax.swing.JButton toKBSevenButton;
    private javax.swing.JButton toSoloButton;
    // End of variables declaration//GEN-END:variables
}
